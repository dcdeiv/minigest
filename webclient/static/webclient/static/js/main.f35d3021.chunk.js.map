{"version":3,"sources":["serviceWorker.js","Layout/theme.js","Layout/Drawer.jsx","Layout/Layout.jsx","helpers/history.js","helpers/axios.js","store/reducer/index.js","store/middleware/index.js","store/middleware/logger.js","store/store.js","NotFound.jsx","index.js","App/index.jsx"],"names":["Boolean","window","location","hostname","match","theme","createMuiTheme","common","white","black","palette","type","AppDrawer","props","Fragment","List","ListItem","button","to","ListItemIcon","ListItemText","useStyles","makeStyles","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","Layout","classes","React","useState","mobileOpen","setMobileOpen","container","undefined","document","body","handleDrawerToggle","className","AppBar","position","Toolbar","IconButton","color","aria-label","edge","onClick","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","open","onClose","paper","ModalProps","keepMounted","xsDown","Divider","children","createBrowserHistory","axios","create","baseURL","xsrfHeaderName","xsrfCookieName","api","combineReducers","middlewares","createLogger","thunkMiddleware","applyMiddleware","compose","middleware","createStore","rootReducer","box","textAlign","NotFound","Container","Box","p","component","ReactDOM","render","locale","store","ThemeProvider","CssBaseline","history","exact","path","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f35d3021.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  common: {\n    white: \"#F8F8F8\",\n    black: \"#2B2B2B\",\n  },\n  palette: {\n    type: \"dark\",\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\n\nfunction AppDrawer(props) {\n  return (\n    <React.Fragment>\n      <List>\n        <ListItem button to=\"/\">\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n          <ListItemText>minigest</ListItemText>\n        </ListItem>\n      </List>\n    </React.Fragment>\n  );\n}\n\nexport default AppDrawer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Hidden,\n  AppBar,\n  Toolbar,\n  Typography,\n  Drawer,\n  IconButton,\n  Divider,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AppDrawer from \"./Drawer\";\n\nconst drawerWidth = 250;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction Layout(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            minigest\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <nav className={classes.drawer}>\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor=\"left\"\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true,\n            }}\n          >\n            <AppDrawer />\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            <div className={classes.toolbar} />\n            <Divider />\n            <AppDrawer />\n          </Drawer>\n        </Hidden>\n      </nav>\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {props.children}\n      </main>\n    </div>\n  );\n}\n\nLayout.propTypes = {\n  window: PropTypes.func,\n};\n\nexport default Layout;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"/api/\",\n  xsrfHeaderName: \"X-CSRFTOKEN\",\n  xsrfCookieName: \"csrftoken\",\n});\n\nif (process.env.NODE_ENV === `development`) {\n  api.defaults.withCredentials = true;\n}\n\nexport default api;\n","import { combineReducers } from \"redux\";\n\n// RootReducer\nexport default combineReducers({});\n","import { applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport loggerMiddleware from \"./logger\";\n\nconst middlewares = [thunkMiddleware];\n\nif (process.env.NODE_ENV === `development`) {\n  middlewares.push(loggerMiddleware);\n}\n\nexport default applyMiddleware(...middlewares);\n","import { createLogger } from \"redux-logger\";\n\nexport default createLogger();\n","import { createStore, compose } from \"redux\";\nimport rootReducer from \"./reducer\";\nimport middleware from \"./middleware\";\n\nexport default compose(middleware)(createStore)(rootReducer);\n","import React from \"react\";\nimport { Typography, Box, Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    textAlign: \"center\",\n  },\n}));\n\nfunction NotFound(props) {\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <Box className={classes.box} p={2}>\n        <Typography variant=\"h1\" component=\"h2\">\n          minigest\n        </Typography>\n        <Typography variant=\"h2\" component=\"h3\">\n          pagina non trovata!\n        </Typography>\n      </Box>\n    </Container>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { IntlProvider } from \"react-intl\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\n// Local\nimport * as serviceWorker from \"~/serviceWorker\";\nimport { theme } from \"~/Layout\";\nimport { history } from \"~/helpers\";\nimport { store } from \"~/store\";\n\n// App\nimport App from \"~/App\";\nimport NotFound from \"~/NotFound\";\n\nReactDOM.render(\n  <IntlProvider locale=\"it\">\n    <ReduxProvider store={store}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Router history={history}>\n          <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </ReduxProvider>\n  </IntlProvider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","import React from \"react\";\nimport { Layout } from \"~/Layout\";\n\nexport default function App() {\n  return (\n    <Layout>\n      <h1>Webclient</h1>\n      <p>\n        Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n        accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab\n        illo inventore veritatis et quasi architecto beatae vitae dicta sunt\n        explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut\n        odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\n        voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum\n        quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam\n        eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat\n        voluptatem.\n      </p>\n\n      <p>\n        Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis\n        suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis\n        autem vel eum iure reprehenderit qui in ea voluptate velit esse quam\n        nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo\n        voluptas nulla pariatur? At vero eos et accusamus et iusto odio\n        dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque\n        corrupti quos dolores et quas molestias excepturi sint occaecati\n        cupiditate non provident, similique sunt in culpa qui officia deserunt\n        mollitia animi, id est laborum et dolorum fuga.\n      </p>\n\n      <p>\n        Et harum quidem rerum facilis est et expedita distinctio. Nam libero\n        tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo\n        minus id quod maxime placeat facere possimus, omnis voluptas assumenda\n        est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis\n        debitis aut rerum necessitatibus saepe eveniet ut et voluptates\n        repudiandae sint et molestiae non recusandae. Itaque earum rerum hic\n        tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores\n        alias consequatur aut perferendis doloribus asperiores repellat.\n      </p>\n\n      <p>\n        Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n        accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab\n        illo inventore veritatis et quasi architecto beatae vitae dicta sunt\n        explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut\n        odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\n        voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum\n        quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam\n        eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat\n        voluptatem.\n      </p>\n\n      <p>\n        Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis\n        suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis\n        autem vel eum iure reprehenderit qui in ea voluptate velit esse quam\n        nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo\n        voluptas nulla pariatur? At vero eos et accusamus et iusto odio\n        dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque\n        corrupti quos dolores et quas molestias excepturi sint occaecati\n        cupiditate non provident, similique sunt in culpa qui officia deserunt\n        mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum\n        facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis\n        est eligendi optio cumque nihil impedit quo minus id quod maxime placeat\n        facere possimus, omnis voluptas assumenda est, omnis dolor repellendus.\n        Temporibus autem quibusdam et aut officiis debitis aut rerum\n        necessitatibus saepe eveniet ut et voluptates repudiandae sint et\n        molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente\n        delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut\n        perferendis doloribus asperiores repellat. Sed ut\n      </p>\n    </Layout>\n  );\n}\n"],"sourceRoot":""}