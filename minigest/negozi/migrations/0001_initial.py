# Generated by Django 3.0.7 on 2020-06-10 19:22

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import minigest.common.models.fields.uppercase


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('anagrafica', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cassa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codice_cassa', minigest.common.models.fields.uppercase.UpperCaseField(help_text='Un codice alfanumerico identificativo per il punto cassa.\n            Esempio: GO1', max_length=10, validators=[django.core.validators.RegexValidator(regex='^[a-zA-Z0-9]+$')], verbose_name='codice identificativo cassa')),
                ('id_registratore', models.CharField(blank=True, default=None, help_text='il numero identificativo del registratore di cassa', max_length=20, null=True, validators=[django.core.validators.RegexValidator(regex='^[a-zA-Z0-9]+$')])),
            ],
            options={
                'verbose_name': 'Punto cassa',
                'verbose_name_plural': 'Punti cassa',
            },
        ),
        migrations.CreateModel(
            name='Negozio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insegna', models.CharField(max_length=80)),
                ('codice_negozio', minigest.common.models.fields.uppercase.UpperCaseField(help_text='Il codice univoco del negozio, così come specificato da Google Buisiness\n            È composto dal nome del brand più un numero. Es: GOOG1', max_length=64, unique=True, validators=[django.core.validators.RegexValidator(regex='^[a-zA-Z0-9]+$')])),
                ('impresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='negozi', to='anagrafica.Impresa', verbose_name='impresa')),
            ],
            options={
                'verbose_name_plural': 'Negozi',
            },
        ),
        migrations.CreateModel(
            name='OrarioVariante',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dal', models.DateField()),
                ('al', models.DateField(blank=True, default=None, null=True)),
                ('apertura', models.TimeField(blank=True, default=None, null=True)),
                ('chiusura', models.TimeField(blank=True, default=None, null=True)),
                ('motivo', models.CharField(default='Festività', max_length=100)),
                ('negozio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orari_varianti', to='negozi.Negozio')),
            ],
            options={
                'verbose_name': 'Variante orario',
                'verbose_name_plural': 'Varianti orari',
            },
        ),
        migrations.CreateModel(
            name='Orario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('giorno', models.IntegerField(choices=[(0, 'Lunedì'), (1, 'Martedì'), (2, 'Mercoledì'), (3, 'Giovedì'), (4, 'Venerdì'), (5, 'Sabato'), (6, 'Domenica')])),
                ('apertura', models.TimeField(blank=True, default=None, null=True)),
                ('chiusura', models.TimeField(blank=True, default=None, null=True)),
                ('negozio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orari', to='negozi.Negozio')),
            ],
            options={
                'verbose_name_plural': 'Orari',
            },
        ),
        migrations.CreateModel(
            name='NegozioSede',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indirizzo', models.CharField(max_length=60, validators=[django.core.validators.MinLengthValidator(1)])),
                ('numero_civico', models.CharField(blank=True, max_length=10, null=True)),
                ('cap', models.CharField(default='00000', help_text='per paesi extra EU inserire 00000', max_length=5, validators=[django.core.validators.MinLengthValidator(5)])),
                ('comune', models.CharField(max_length=60)),
                ('provincia', minigest.common.models.fields.uppercase.UpperCaseField(blank=True, help_text='es: MI - da valorizzare solo se nazione è uguale a IT (Italia)', max_length=2, null=True, validators=[django.core.validators.MinLengthValidator(2)])),
                ('nazione', minigest.common.models.fields.uppercase.UpperCaseField(help_text='es: IT', max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('negozio', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sede', to='negozi.Negozio')),
            ],
            options={
                'verbose_name': 'Indirizzo',
            },
        ),
        migrations.CreateModel(
            name='Incasso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eur_500', models.PositiveIntegerField(default=0, verbose_name='500,00 €')),
                ('eur_200', models.PositiveIntegerField(default=0, verbose_name='200,00 €')),
                ('eur_100', models.PositiveIntegerField(default=0, verbose_name='100,00 €')),
                ('eur_50', models.PositiveIntegerField(default=0, verbose_name='50,00 €')),
                ('eur_20', models.PositiveIntegerField(default=0, verbose_name='20,00 €')),
                ('eur_10', models.PositiveIntegerField(default=0, verbose_name='10,00 €')),
                ('eur_5', models.PositiveIntegerField(default=0, verbose_name='5,00 €')),
                ('eur_2', models.PositiveIntegerField(default=0, verbose_name='2,00 €')),
                ('eur_1', models.PositiveIntegerField(default=0, verbose_name='1,00 €')),
                ('eur_050', models.PositiveIntegerField(default=0, verbose_name='0,50 €')),
                ('eur_020', models.PositiveIntegerField(default=0, verbose_name='0,20 €')),
                ('eur_010', models.PositiveIntegerField(default=0, verbose_name='0,10 €')),
                ('eur_005', models.PositiveIntegerField(default=0, verbose_name='0,05 €')),
                ('eur_002', models.PositiveIntegerField(default=0, verbose_name='0,02 €')),
                ('eur_001', models.PositiveIntegerField(default=0, verbose_name='0,01 €')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('chiusura', models.DecimalField(decimal_places=2, default=0, max_digits=19, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Chiusura Fiscale')),
                ('saldo_documenti_fiscali', models.DecimalField(decimal_places=2, default=0, help_text='Fatture - Note di Credito', max_digits=19, verbose_name='Saldo dei Documenti Fiscali')),
                ('resi', models.DecimalField(decimal_places=2, default=0, max_digits=19, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Totale dei Resi')),
                ('annulli', models.DecimalField(decimal_places=2, default=0, max_digits=19, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Totale degli Annulli')),
                ('vpay', models.DecimalField(decimal_places=2, default=0, max_digits=19, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Totale dei pagamenti virtuali')),
                ('cassa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='incassi', to='negozi.Cassa')),
            ],
            options={
                'verbose_name_plural': 'incassi',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='FondoCassa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eur_500', models.PositiveIntegerField(default=0, verbose_name='500,00 €')),
                ('eur_200', models.PositiveIntegerField(default=0, verbose_name='200,00 €')),
                ('eur_100', models.PositiveIntegerField(default=0, verbose_name='100,00 €')),
                ('eur_50', models.PositiveIntegerField(default=0, verbose_name='50,00 €')),
                ('eur_20', models.PositiveIntegerField(default=0, verbose_name='20,00 €')),
                ('eur_10', models.PositiveIntegerField(default=0, verbose_name='10,00 €')),
                ('eur_5', models.PositiveIntegerField(default=0, verbose_name='5,00 €')),
                ('eur_2', models.PositiveIntegerField(default=0, verbose_name='2,00 €')),
                ('eur_1', models.PositiveIntegerField(default=0, verbose_name='1,00 €')),
                ('eur_050', models.PositiveIntegerField(default=0, verbose_name='0,50 €')),
                ('eur_020', models.PositiveIntegerField(default=0, verbose_name='0,20 €')),
                ('eur_010', models.PositiveIntegerField(default=0, verbose_name='0,10 €')),
                ('eur_005', models.PositiveIntegerField(default=0, verbose_name='0,05 €')),
                ('eur_002', models.PositiveIntegerField(default=0, verbose_name='0,02 €')),
                ('eur_001', models.PositiveIntegerField(default=0, verbose_name='0,01 €')),
                ('cassa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fondo_cassa', to='negozi.Cassa')),
            ],
            options={
                'verbose_name': 'Fondo cassa',
                'verbose_name_plural': 'Fondo cassa',
            },
        ),
        migrations.AddField(
            model_name='cassa',
            name='negozio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='casse', to='negozi.Negozio'),
        ),
    ]
