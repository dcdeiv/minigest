{"version":3,"sources":["App/Utilizzo/Negozio/Partials/Cassa.jsx","App/Utilizzo/Negozio/Partials/Orari.jsx","App/Utilizzo/Negozio/Partials/OrariVarianti.jsx","App/Utilizzo/Negozio/Partials/Primo.jsx","App/Utilizzo/Negozio/Partials/Sede.jsx","App/Utilizzo/Negozio/index.jsx"],"names":["Cassa","props","noDivider","mb","Typography","variant","Grid","container","direction","justify","alignItems","spacing","item","xs","sm","src","process","alt","gutterBottom","Orari","OrariVarianti","Primo","Sede","Negozio","Fragment","mt"],"mappings":"yLAMO,SAASA,EAAMC,GACpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWC,WAAS,EAACC,GAAI,GACvB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,SACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,aAApB,oEAKF,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXC,QAAS,GAET,kBAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CACEC,IAAG,UArBMC,qCAqBN,cACHC,IAAI,gCAGR,kBAACX,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACV,EAAA,EAAD,CAAYc,cAAY,GAAxB,6JAKA,kBAACd,EAAA,EAAD,CAAYc,cAAY,GAAxB,mCAC+B,0DAD/B,kIAKA,kBAACd,EAAA,EAAD,iBACW,8CADX,2TClCH,SAASe,EAAMlB,GACpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWC,WAAS,EAACC,GAAI,GACvB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,SACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,aAApB,wDAKF,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXC,QAAS,GAET,kBAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CACEE,IAAG,UArBMC,qCAqBN,cACHC,IAAI,gCAGR,kBAACX,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,IACb,kBAACT,EAAA,EAAD,CAAYc,cAAY,GAAxB,sLAKA,kBAACd,EAAA,EAAD,6GC7BH,SAASgB,EAAcnB,GAC5B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWC,WAAS,EAACC,GAAI,GACvB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,kBACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,aAApB,wKAOF,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXC,QAAS,GAET,kBAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CACEE,IAAG,UAvBMC,qCAuBN,uBACHC,IAAI,yCAGR,kBAACX,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,IACb,kBAACT,EAAA,EAAD,CAAYc,cAAY,GAAxB,8PC1BH,SAASG,EAAMpB,GACpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWC,WAAS,EAACC,GAAI,GACvB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,eACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,aAApB,8DAKF,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXC,QAAS,GAET,kBAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CACEC,IAAG,UArBMC,qCAqBN,gBACHC,IAAI,gCAGR,kBAACX,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACV,EAAA,EAAD,CAAYc,cAAY,GAAxB,aACY,sCADZ,uHAKA,kBAACd,EAAA,EAAD,CAAYc,cAAY,GAAxB,YACW,sCADX,4SAOA,kBAACd,EAAA,EAAD,kBACY,6CADZ,mNCpCH,SAASkB,EAAKrB,GACnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWC,WAAS,EAACC,GAAI,GACvB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,QACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,aAApB,8IAMF,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,aACXC,QAAS,GAET,kBAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CACEC,IAAG,UAtBMC,qCAsBN,aACHC,IAAI,+BAGR,kBAACX,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACV,EAAA,EAAD,CAAYc,cAAY,GAAxB,aACY,wCADZ,qEAIA,kBAACd,EAAA,EAAD,CAAYc,cAAY,GAAxB,YACW,4CADX,+DAIA,kBAACd,EAAA,EAAD,CAAYc,cAAY,GAAxB,sEACmE,IACjE,kCAFF,yBAIA,kBAACd,EAAA,EAAD,CAAYc,cAAY,GAAxB,YACW,qCADX,kDAGA,kBAACd,EAAA,EAAD,CAAYc,cAAY,GAAxB,eACc,wCADd,0BAGA,kBAACd,EAAA,EAAD,CAAYc,cAAY,GAAxB,YACW,sCADX,gEC1CK,SAASK,EAAQtB,GAC9B,OACE,kBAAC,IAAMuB,SAAP,KACE,kBAAC,IAAD,CAAWrB,GAAI,GACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,YAApB,YACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,MAApB,WACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,YAAYa,cAAY,GAA5C,oCAIA,kBAAC,IAAD,CAAWO,GAAI,GAAf,2BAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWtB,GAAI,EAAGD,WAAS,GACzB,kBAACE,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBAEA,kBAAC,IAAD,CAAWoB,GAAI,EAAGtB,GAAI,GAAtB,mCAKF,kBAACC,EAAA,EAAD,wFAKA,kBAACiB,EAAD,MACA,kBAACC,EAAD,MACA,kBAACH,EAAD,MACA,kBAACC,EAAD,MACA,kBAACpB,EAAD","file":"static/js/4.067f26c4.chunk.js","sourcesContent":["import React from \"react\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport { AppHeader, SectionSecondary, Image } from \"src/Components\";\n\nconst baseImageUrl = process.env.PUBLIC_URL + \"/screenshots/negozio/form\";\n\nexport function Cassa(props) {\n  return (\n    <SectionSecondary>\n      <AppHeader noDivider mb={2}>\n        <Typography variant=\"h6\">Cassa</Typography>\n        <Typography variant=\"subtitle1\">\n          Questa sezione descrive i punti cassa all'interno di un negozio\n        </Typography>\n      </AppHeader>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-start\"\n        spacing={2}\n      >\n        <Grid item xs={12} sm={6}>\n          <Image\n            src={`${baseImageUrl}/cassa.png`}\n            alt=\"Form negozio sezione cassa\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography gutterBottom>\n            A questo punto è possibile aggiungere i punti cassa/registratori\n            fiscali presenti nel punto vendita! Potete aggiungere tutti i punti\n            cassa che volete!\n          </Typography>\n          <Typography gutterBottom>\n            L'unico campo richiesto è il <b>CODICE IDENTIFICATIVO CASSA</b> che\n            consiste in un codice alfanumerico (numeri e lettere) per\n            distinguere i diversi punti cassa all'interno del punto vendita\n          </Typography>\n          <Typography>\n            Il campo <b>ID REGISTRATORE</b> non è obbligatorio, ma potete\n            salvare il codice assegnato dall'agenzia delle entrate al\n            registratore fiscale. Questo campo è utile per salvare\n            l'informazione affinché possiate trovarla in futuro qualora dobbiate\n            ricercare i corrispettivi emessi dal registratore sul sito\n            dell'agenzia delle entrate!\n          </Typography>\n        </Grid>\n      </Grid>\n    </SectionSecondary>\n  );\n}\n","import React from \"react\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport { AppHeader, SectionSecondary, Image } from \"src/Components\";\n\nconst baseImageUrl = process.env.PUBLIC_URL + \"/screenshots/negozio/form\";\n\nexport function Orari(props) {\n  return (\n    <SectionSecondary>\n      <AppHeader noDivider mb={2}>\n        <Typography variant=\"h6\">Orari</Typography>\n        <Typography variant=\"subtitle1\">\n          Questa sezione conserva gli orari del punto vendita\n        </Typography>\n      </AppHeader>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-start\"\n        spacing={2}\n      >\n        <Grid item xs={12}>\n          <Image\n            src={`${baseImageUrl}/orari.png`}\n            alt=\"Form negozio sezione orari\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography gutterBottom>\n            In questa sezione potete aggiungere gli orari del punto vendita\n            giorno per giorno, basta selezionare il giorno della settimana\n            (lunedì, ..., domenica) e gli orari di apertura.\n          </Typography>\n          <Typography>\n            Se un negozio è chiuso in un determinato giorno della settimana, non\n            aggiungere nessun orario!\n          </Typography>\n        </Grid>\n      </Grid>\n    </SectionSecondary>\n  );\n}\n","import React from \"react\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport { AppHeader, SectionSecondary, Image } from \"src/Components\";\n\nconst baseImageUrl = process.env.PUBLIC_URL + \"/screenshots/negozio/form\";\n\nexport function OrariVarianti(props) {\n  return (\n    <SectionSecondary>\n      <AppHeader noDivider mb={2}>\n        <Typography variant=\"h6\">Orari Varianti</Typography>\n        <Typography variant=\"subtitle1\">\n          In questa sezione è possibile sovrascrivere gli orari standard di un\n          negozio a seconda di un'apertura o chiusura straordinaria. Per esempio\n          natale, capodanno...\n        </Typography>\n      </AppHeader>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-start\"\n        spacing={2}\n      >\n        <Grid item xs={12}>\n          <Image\n            src={`${baseImageUrl}/orari_varianti.png`}\n            alt=\"Form negozio sezione orari varianti\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography gutterBottom>\n            Aggiungete la data di inizio e quella di fine in cui l'orario varia.\n            In apertura e chiusura inserire gli orari di apertura e chiusura. Se\n            il negozio rimane chiuso, non inserire nessun orario. Giustificare\n            il cambiamento di orari nell campo motivo.\n          </Typography>\n        </Grid>\n      </Grid>\n    </SectionSecondary>\n  );\n}\n","import React from \"react\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport { AppHeader, SectionSecondary, Image } from \"src/Components\";\n\nconst baseImageUrl = process.env.PUBLIC_URL + \"/screenshots/negozio/form\";\n\nexport function Primo(props) {\n  return (\n    <SectionSecondary>\n      <AppHeader noDivider mb={2}>\n        <Typography variant=\"h6\">Primi Passi</Typography>\n        <Typography variant=\"subtitle1\">\n          La prima sezione definisce le caratteristiche del negozio\n        </Typography>\n      </AppHeader>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-start\"\n        spacing={2}\n      >\n        <Grid item xs={12} sm={6}>\n          <Image\n            src={`${baseImageUrl}/negozio.png`}\n            alt=\"Form negozio sezione prima\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography gutterBottom>\n            Nel campo <b>IMPRESA</b> selezionare l'azienda a cui si vuole\n            assegnare il negozio, per esempio l'impresa che avete inserito in\n            precedenza.\n          </Typography>\n          <Typography gutterBottom>\n            Il campo <b>INSEGNA</b> chiede che si aggiunga il nome variante del\n            negozio. Non aggiungere il nome dell'impresa ma il nome proprio del\n            negozio. Per esempio, se la tua azienda si chiama Il mio bar di\n            Mario Rossi, ma l'insegna al di fuori del negozio recita \"Bananabar\"\n            è opportuno scrivere l'ultimo e non il primo!\n          </Typography>\n          <Typography>\n            Nel campo <b>CODICE NEGOZIO</b> inserire un codice univoco interno\n            che rappresenti il vostro punto vendita. Seguire le istruzioni di\n            Google Buisiness! Il codice è composto dal nome del brand/insegna\n            più un numero. Esempio: GOOG1.\n          </Typography>\n        </Grid>\n      </Grid>\n    </SectionSecondary>\n  );\n}\n","import React from \"react\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport { AppHeader, SectionSecondary, Image } from \"src/Components\";\n\nconst baseImageUrl = process.env.PUBLIC_URL + \"/screenshots/negozio/form\";\n\nexport function Sede(props) {\n  return (\n    <SectionSecondary>\n      <AppHeader noDivider mb={2}>\n        <Typography variant=\"h6\">Sede</Typography>\n        <Typography variant=\"subtitle1\">\n          In questa sezione è possibile aggiungere l'indirizzo della sede del\n          negozio. È possibile aggiungere un solo indirizzo di tipo sede!\n        </Typography>\n      </AppHeader>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-start\"\n        spacing={2}\n      >\n        <Grid item xs={12} sm={6}>\n          <Image\n            src={`${baseImageUrl}/sede.png`}\n            alt=\"Form negozio sezione sede\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography gutterBottom>\n            Nel campo <b>INDIRIZZO</b> inserire l'indirizzo senza il numero\n            civico! (es: Viale Italia).\n          </Typography>\n          <Typography gutterBottom>\n            Nel capo <b>NUMERO CIVICO</b> inserire solamente il numero civico!\n            (es: 16/A, interno 2)\n          </Typography>\n          <Typography gutterBottom>\n            Se la sede è estera, inserire 00000 (cinque volte zero) nel capo{\" \"}\n            <b>CAP</b>. Campo obbligatorio!\n          </Typography>\n          <Typography gutterBottom>\n            Il campo <b>COMUNE</b> inserire il comune dell'indirizzo della sede.\n          </Typography>\n          <Typography gutterBottom>\n            Inserire la <b>PROVINCIA</b> in due cifre (es: MI)\n          </Typography>\n          <Typography gutterBottom>\n            Nel capo <b>Nazione</b> inserire il codice a due cifre della nazione\n            della sede.\n          </Typography>\n        </Grid>\n      </Grid>\n    </SectionSecondary>\n  );\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { AppHeader, Section, CodeBlock } from \"src/Components\";\n\n// Partials\nimport { Primo, Sede, Orari, OrariVarianti, Cassa } from \"./Partials\";\n\nexport default function Negozio(props) {\n  return (\n    <React.Fragment>\n      <AppHeader mb={4}>\n        <Typography variant=\"overline\">utilizzo</Typography>\n        <Typography variant=\"h3\">Negozio</Typography>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          guida all'aggiunta di un negozio\n        </Typography>\n\n        <CodeBlock mt={2}>/admin/negozi/negozio/</CodeBlock>\n      </AppHeader>\n\n      <Section>\n        <AppHeader mb={2} noDivider>\n          <Typography variant=\"h4\">Nuovo Negozio</Typography>\n\n          <CodeBlock mt={2} mb={0}>\n            /admin/anagrafica/negozio/add/\n          </CodeBlock>\n        </AppHeader>\n\n        <Typography>\n          Prima di aggiungere un negozio assicuratevi di aver aggiunto la vostra\n          impresa!\n        </Typography>\n\n        <Primo />\n        <Sede />\n        <Orari />\n        <OrariVarianti />\n        <Cassa />\n      </Section>\n    </React.Fragment>\n  );\n}\n"],"sourceRoot":""}